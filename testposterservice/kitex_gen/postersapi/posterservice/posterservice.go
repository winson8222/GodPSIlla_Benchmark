// Code generated by Kitex v0.5.2. DO NOT EDIT.

package posterservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	postersapi "testposterservice/kitex_gen/postersapi"
)

func serviceInfo() *kitex.ServiceInfo {
	return posterServiceServiceInfo
}

var posterServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "PosterService"
	handlerType := (*postersapi.PosterService)(nil)
	methods := map[string]kitex.MethodInfo{
		"getuniqueusernames8020":    kitex.NewMethodInfo(getuniqueusernames8020Handler, newPosterServiceGetuniqueusernames8020Args, newPosterServiceGetuniqueusernames8020Result, false),
		"getuniqueusernames2080":    kitex.NewMethodInfo(getuniqueusernames2080Handler, newPosterServiceGetuniqueusernames2080Args, newPosterServiceGetuniqueusernames2080Result, false),
		"getuniqueusernames8099920": kitex.NewMethodInfo(getuniqueusernames8099920Handler, newPosterServiceGetuniqueusernames8099920Args, newPosterServiceGetuniqueusernames8099920Result, false),
		"getuniqueusernames2099980": kitex.NewMethodInfo(getuniqueusernames2099980Handler, newPosterServiceGetuniqueusernames2099980Args, newPosterServiceGetuniqueusernames2099980Result, false),
		"getuniqueusernames80k20k":  kitex.NewMethodInfo(getuniqueusernames80k20kHandler, newPosterServiceGetuniqueusernames80k20kArgs, newPosterServiceGetuniqueusernames80k20kResult, false),
		"getuniqueusernames20k80k":  kitex.NewMethodInfo(getuniqueusernames20k80kHandler, newPosterServiceGetuniqueusernames20k80kArgs, newPosterServiceGetuniqueusernames20k80kResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "postersapi",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.5.2",
		Extra:           extra,
	}
	return svcInfo
}

func getuniqueusernames8020Handler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*postersapi.PosterServiceGetuniqueusernames8020Args)
	realResult := result.(*postersapi.PosterServiceGetuniqueusernames8020Result)
	success, err := handler.(postersapi.PosterService).Getuniqueusernames8020(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newPosterServiceGetuniqueusernames8020Args() interface{} {
	return postersapi.NewPosterServiceGetuniqueusernames8020Args()
}

func newPosterServiceGetuniqueusernames8020Result() interface{} {
	return postersapi.NewPosterServiceGetuniqueusernames8020Result()
}

func getuniqueusernames2080Handler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*postersapi.PosterServiceGetuniqueusernames2080Args)
	realResult := result.(*postersapi.PosterServiceGetuniqueusernames2080Result)
	success, err := handler.(postersapi.PosterService).Getuniqueusernames2080(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newPosterServiceGetuniqueusernames2080Args() interface{} {
	return postersapi.NewPosterServiceGetuniqueusernames2080Args()
}

func newPosterServiceGetuniqueusernames2080Result() interface{} {
	return postersapi.NewPosterServiceGetuniqueusernames2080Result()
}

func getuniqueusernames8099920Handler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*postersapi.PosterServiceGetuniqueusernames8099920Args)
	realResult := result.(*postersapi.PosterServiceGetuniqueusernames8099920Result)
	success, err := handler.(postersapi.PosterService).Getuniqueusernames8099920(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newPosterServiceGetuniqueusernames8099920Args() interface{} {
	return postersapi.NewPosterServiceGetuniqueusernames8099920Args()
}

func newPosterServiceGetuniqueusernames8099920Result() interface{} {
	return postersapi.NewPosterServiceGetuniqueusernames8099920Result()
}

func getuniqueusernames2099980Handler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*postersapi.PosterServiceGetuniqueusernames2099980Args)
	realResult := result.(*postersapi.PosterServiceGetuniqueusernames2099980Result)
	success, err := handler.(postersapi.PosterService).Getuniqueusernames2099980(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newPosterServiceGetuniqueusernames2099980Args() interface{} {
	return postersapi.NewPosterServiceGetuniqueusernames2099980Args()
}

func newPosterServiceGetuniqueusernames2099980Result() interface{} {
	return postersapi.NewPosterServiceGetuniqueusernames2099980Result()
}

func getuniqueusernames80k20kHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*postersapi.PosterServiceGetuniqueusernames80k20kArgs)
	realResult := result.(*postersapi.PosterServiceGetuniqueusernames80k20kResult)
	success, err := handler.(postersapi.PosterService).Getuniqueusernames80k20k(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newPosterServiceGetuniqueusernames80k20kArgs() interface{} {
	return postersapi.NewPosterServiceGetuniqueusernames80k20kArgs()
}

func newPosterServiceGetuniqueusernames80k20kResult() interface{} {
	return postersapi.NewPosterServiceGetuniqueusernames80k20kResult()
}

func getuniqueusernames20k80kHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*postersapi.PosterServiceGetuniqueusernames20k80kArgs)
	realResult := result.(*postersapi.PosterServiceGetuniqueusernames20k80kResult)
	success, err := handler.(postersapi.PosterService).Getuniqueusernames20k80k(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newPosterServiceGetuniqueusernames20k80kArgs() interface{} {
	return postersapi.NewPosterServiceGetuniqueusernames20k80kArgs()
}

func newPosterServiceGetuniqueusernames20k80kResult() interface{} {
	return postersapi.NewPosterServiceGetuniqueusernames20k80kResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) Getuniqueusernames8020(ctx context.Context, req *postersapi.Request) (r *postersapi.Response, err error) {
	var _args postersapi.PosterServiceGetuniqueusernames8020Args
	_args.Req = req
	var _result postersapi.PosterServiceGetuniqueusernames8020Result
	if err = p.c.Call(ctx, "getuniqueusernames8020", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

func (p *kClient) Getuniqueusernames2080(ctx context.Context, req *postersapi.Request) (r *postersapi.Response, err error) {
	var _args postersapi.PosterServiceGetuniqueusernames2080Args
	_args.Req = req
	var _result postersapi.PosterServiceGetuniqueusernames2080Result
	if err = p.c.Call(ctx, "getuniqueusernames2080", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

func (p *kClient) Getuniqueusernames8099920(ctx context.Context, req *postersapi.Request) (r *postersapi.Response, err error) {
	var _args postersapi.PosterServiceGetuniqueusernames8099920Args
	_args.Req = req
	var _result postersapi.PosterServiceGetuniqueusernames8099920Result
	if err = p.c.Call(ctx, "getuniqueusernames8099920", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

func (p *kClient) Getuniqueusernames2099980(ctx context.Context, req *postersapi.Request) (r *postersapi.Response, err error) {
	var _args postersapi.PosterServiceGetuniqueusernames2099980Args
	_args.Req = req
	var _result postersapi.PosterServiceGetuniqueusernames2099980Result
	if err = p.c.Call(ctx, "getuniqueusernames2099980", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

func (p *kClient) Getuniqueusernames80k20k(ctx context.Context, req *postersapi.Request) (r *postersapi.Response, err error) {
	var _args postersapi.PosterServiceGetuniqueusernames80k20kArgs
	_args.Req = req
	var _result postersapi.PosterServiceGetuniqueusernames80k20kResult
	if err = p.c.Call(ctx, "getuniqueusernames80k20k", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

func (p *kClient) Getuniqueusernames20k80k(ctx context.Context, req *postersapi.Request) (r *postersapi.Response, err error) {
	var _args postersapi.PosterServiceGetuniqueusernames20k80kArgs
	_args.Req = req
	var _result postersapi.PosterServiceGetuniqueusernames20k80kResult
	if err = p.c.Call(ctx, "getuniqueusernames20k80k", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
